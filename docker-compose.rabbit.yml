version: "3"

services:
  redis:
    image: redis:7.0.5-alpine
    restart: always
    volumes:
      - redis:/data
    networks:
      - jasmin
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      retries: 3
      timeout: 5s

  rabbit-mq:
    image: rabbitmq:3.11.3-management-alpine  # Use the RabbitMQ image with the management plugin
    restart: always
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - jasmin
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - '${FORWARD_RABBITMQ_MANAGEMENT_PORT:-15672}:15672'  # Expose RabbitMQ Management Console

  jasmin:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.restapi.alpine
    image: jasmin:restapi
    restart: always
    ports:
      - '${FORWARD_JASMIN_SMPP_PORT:-2775}:2775'
      - '${FORWARD_JASMIN_CLI_PORT:-8990}:8990'
      - '${FORWARD_JASMIN_HTTP_PORT:-1401}:1401'
    volumes:
      - jasmin_config:/etc/jasmin
      - jasmin_store:/etc/jasmin/store
      - jasmin_logs:/var/log/jasmin
    tmpfs:
      - /tmp
    networks:
      - jasmin
    depends_on:
      redis:
        condition: service_healthy
      rabbit-mq:
        condition: service_healthy
    environment:
      REDIS_CLIENT_HOST: ${REDIS_CLIENT_HOST:-redis}
      REDIS_CLIENT_PORT: ${REDIS_CLIENT_PORT:-6379}
      AMQP_BROKER_HOST: ${AMQP_BROKER_HOST:-rabbit-mq}
      AMQP_BROKER_PORT: ${AMQP_BROKER_PORT:-5672}
      ENABLE_PUBLISH_SUBMIT_SM_RESP: ${ENABLE_PUBLISH_SUBMIT_SM_RESP:-1}
      RESTAPI_MODE: ${RESTAPI_MODE:-0}
  

  jasmin-restapi:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.restapi
    image: jasmin:restapi
    restart: always
    ports:
      - '${FORWARD_JASMIN_RESTAPI_PORT:-8080}:8080'
    volumes:
      - restapi_logs:/var/log/jasmin
    tmpfs:
      - /tmp
    networks:
      - jasmin
    depends_on:
      - jasmin
    environment:
      REDIS_CLIENT_HOST: ${REDIS_CLIENT_HOST:-redis}
      REDIS_CLIENT_PORT: ${REDIS_CLIENT_PORT:-6379}
      AMQP_BROKER_HOST: ${AMQP_BROKER_HOST:-rabbit-mq}
      AMQP_BROKER_PORT: ${AMQP_BROKER_PORT:-5672}
      RESTAPI_MODE: ${RESTAPI_MODE:-1}
      RESTAPI_OLD_HTTP_HOST: ${RESTAPI_OLD_HTTP_HOST:-jasmin}

  celery:
    image: "python:3.8"
    build:
      context: .
      dockerfile: ./docker/Dockerfile.celery
    volumes:
      - ./app:/app
    depends_on:
      - rabbit-mq
    environment:
      - BROKER_URL=pyamqp://guest:guest@rabbit-mq//
      - CELERY_RESULT_BACKEND=rpc://

  celery-beat:
    image: "python:3.8"
    build:
      context: .
      dockerfile: ./docker/Dockerfile.celery
    volumes:
      - ./app:/app
    depends_on:
      - rabbit-mq
      - celery
    command: celery -A jasmin.protocols.rest.tasks beat --scheduler django_celery_beat.schedulers:DatabaseScheduler

  flower:
    image: "mher/flower"
    ports:
      - "5555:5555"
    depends_on:
      - celery
    command: "flower --app=jasmin.protocols.rest.tasks --broker=pyamqp://guest:guest@rabbit-mq//"


networks:
  jasmin:
    driver: bridge
volumes:
  jasmin_config: {}
  jasmin_store: {}
  jasmin_logs: {}
  restapi_logs: {}
  rabbitmq: {}
  redis: {}
